
vmodl.query.PropertyCollector.UpdateSet
=======================================
  A set of updates that represent the changes since a prior call to `CheckForUpdates <vmodl/query/PropertyCollector.rst#checkForUpdates>`_ , `WaitForUpdates <vmodl/query/PropertyCollector.rst#waitForUpdates>`_ , or `WaitForUpdatesEx <vmodl/query/PropertyCollector.rst#waitForUpdatesEx>`_ .
:extends: vmodl.DynamicData_

Attributes:
    version (`str <https://docs.python.org/2/library/stdtypes.html>`_):

       New data version to pass in the next call to `CheckForUpdates <vmodl/query/PropertyCollector.rst#checkForUpdates>`_ , `WaitForUpdates <vmodl/query/PropertyCollector.rst#waitForUpdates>`_ , or `WaitForUpdatesEx <vmodl/query/PropertyCollector.rst#waitForUpdatesEx>`_ . These versions, although they are opaque, are strongly ordered in the sense that passing a version to `WaitForUpdates <vmodl/query/PropertyCollector.rst#waitForUpdates>`_ , `CheckForUpdates <vmodl/query/PropertyCollector.rst#checkForUpdates>`_ or `WaitForUpdatesEx <vmodl/query/PropertyCollector.rst#waitForUpdatesEx>`_ requests updates that reflect changes in the objects selected by the Filter that happened after the specified version.
    filterSet ([`vmodl.query.PropertyCollector.FilterUpdate <vmodl/query/PropertyCollector/FilterUpdate.rst>`_], optional):

       Set of managed object updates detected by specific filters. Updates are reported in sets. Each set is associated with a reference to a filter that detected the updates in the set.
    truncated (`bool <https://docs.python.org/2/library/stdtypes.html>`_, optional):

       If true, this `UpdateSet <vmodl/query/PropertyCollector/UpdateSet.rst>`_ contains results from a suspended change calculation, which places restrictions on the use of version.The `PropertyCollector <vmodl/query/PropertyCollector.rst>`_ may suspend a calculation due to server policy or if the total number of `ObjectUpdate <vmodl/query/PropertyCollector/ObjectUpdate.rst>`_ entries summed across every `PropertyFilterUpdate <vmodl/query/PropertyCollector/FilterUpdate.rst>`_ reached the maximum specified in `maxObjectUpdates <vmodl/query/PropertyCollector/WaitOptions.rst#maxObjectUpdates>`_ . The client can pass the "truncated data version" to `WaitForUpdatesEx <vmodl/query/PropertyCollector.rst#waitForUpdatesEx>`_ to resume the update calculation, which will start on the filter where it left off. A truncated data version cannot be used more than once and may not be passed to `CheckForUpdates <vmodl/query/PropertyCollector.rst#checkForUpdates>`_ or `WaitForUpdates <vmodl/query/PropertyCollector.rst#waitForUpdates>`_ . `truncated <vmodl/query/PropertyCollector/UpdateSet.rst#truncated>`_ will never be true in an `UpdateSet <vmodl/query/PropertyCollector/UpdateSet.rst>`_ returned from `CheckForUpdates <vmodl/query/PropertyCollector.rst#checkForUpdates>`_ or `WaitForUpdates <vmodl/query/PropertyCollector.rst#waitForUpdates>`_ .If false, this `UpdateSet <vmodl/query/PropertyCollector/UpdateSet.rst>`_ contains a complete change calculation or the last part of a series of suspended change calculations. The version may be passed to `CheckForUpdates <vmodl/query/PropertyCollector.rst#checkForUpdates>`_ , `WaitForUpdates <vmodl/query/PropertyCollector.rst#waitForUpdates>`_ , or `WaitForUpdatesEx <vmodl/query/PropertyCollector.rst#waitForUpdatesEx>`_ more than once. Re-using a version allows a client to recover a change sequence after a transient failure on a previous call.
