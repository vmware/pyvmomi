# ******* WARNING - AUTO GENERATED CODE - DO NOT EDIT *******
from pyVmomi.VmomiSupport import CreateDataType, CreateManagedType, CreateEnumType, AddVersion, AddVersionParent, F_LINK, F_LINKABLE, F_OPTIONAL, F_SECRET
from pyVmomi.VmomiSupport import newestVersions, stableVersions, publicVersions, oldestVersions

AddVersion("vim.version.version10", "vim25", "6.0", 0, "vim25")
AddVersion("vim.version.version11", "vim25", "6.5", 0, "vim25")
AddVersion("vim.version.version12", "vim25", "6.7", 0, "vim25")
AddVersion("vmodl.query.version.version1", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version2", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version3", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version4", "", "", 0, "vim25")
AddVersion("vmodl.reflect.version.version2", "reflect", "2.0", 0, "reflect")
AddVersion("vmodl.reflect.version.version1", "reflect", "1.0", 0, "reflect")
AddVersion("pbm.version.version11", "pbm", "6.5", 0, "pbm")
AddVersion("pbm.version.version13", "pbm", "6.7.1", 0, "pbm")
AddVersion("pbm.version.version12", "pbm", "6.7", 0, "pbm")
AddVersion("vim.version.legacy", "vim25", "legacy", 0, "vim25")
AddVersion("pbm.version.version1", "pbm", "1.0", 0, "pbm")
AddVersion("pbm.version.version2", "pbm", "2.0", 0, "pbm")
AddVersion("vim.version.version13", "vim25", "6.7.1", 0, "vim25")
AddVersion("vim.version.version1", "vim2", "2.0", 0, "vim25")
AddVersion("vim.version.version2", "vim25", "2.5", 0, "vim25")
AddVersion("vim.version.version3", "vim25", "2.5u2", 0, "vim25")
AddVersion("vim.version.version4", "vim25", "2.5u2server", 0, "vim25")
AddVersion("vim.version.version5", "vim25", "4.0", 0, "vim25")
AddVersion("vim.version.version6", "vim25", "4.1", 0, "vim25")
AddVersion("vim.version.version7", "vim25", "5.0", 0, "vim25")
AddVersion("vim.version.version8", "vim25", "5.1", 0, "vim25")
AddVersion("vim.version.version9", "vim25", "5.5", 0, "vim25")
AddVersion("pbm.version.legacy", "pbm", "legacy", 0, "pbm")
AddVersion("vmodl.version.version2", "", "", 0, "vim25")
AddVersion("vmodl.version.version1", "", "", 0, "vim25")
AddVersion("vmodl.version.version0", "", "", 0, "vim25")
AddVersionParent("vim.version.version10", "vim.version.version10")
AddVersionParent("vim.version.version10", "vmodl.query.version.version1")
AddVersionParent("vim.version.version10", "vmodl.query.version.version2")
AddVersionParent("vim.version.version10", "vmodl.query.version.version3")
AddVersionParent("vim.version.version10", "vmodl.query.version.version4")
AddVersionParent("vim.version.version10", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version10", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version10", "vim.version.version1")
AddVersionParent("vim.version.version10", "vim.version.version2")
AddVersionParent("vim.version.version10", "vim.version.version3")
AddVersionParent("vim.version.version10", "vim.version.version4")
AddVersionParent("vim.version.version10", "vim.version.version5")
AddVersionParent("vim.version.version10", "vim.version.version6")
AddVersionParent("vim.version.version10", "vim.version.version7")
AddVersionParent("vim.version.version10", "vim.version.version8")
AddVersionParent("vim.version.version10", "vim.version.version9")
AddVersionParent("vim.version.version10", "vmodl.version.version2")
AddVersionParent("vim.version.version10", "vmodl.version.version1")
AddVersionParent("vim.version.version10", "vmodl.version.version0")
AddVersionParent("vim.version.version11", "vim.version.version10")
AddVersionParent("vim.version.version11", "vim.version.version11")
AddVersionParent("vim.version.version11", "vmodl.query.version.version1")
AddVersionParent("vim.version.version11", "vmodl.query.version.version2")
AddVersionParent("vim.version.version11", "vmodl.query.version.version3")
AddVersionParent("vim.version.version11", "vmodl.query.version.version4")
AddVersionParent("vim.version.version11", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version11", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version11", "vim.version.version1")
AddVersionParent("vim.version.version11", "vim.version.version2")
AddVersionParent("vim.version.version11", "vim.version.version3")
AddVersionParent("vim.version.version11", "vim.version.version4")
AddVersionParent("vim.version.version11", "vim.version.version5")
AddVersionParent("vim.version.version11", "vim.version.version6")
AddVersionParent("vim.version.version11", "vim.version.version7")
AddVersionParent("vim.version.version11", "vim.version.version8")
AddVersionParent("vim.version.version11", "vim.version.version9")
AddVersionParent("vim.version.version11", "vmodl.version.version2")
AddVersionParent("vim.version.version11", "vmodl.version.version1")
AddVersionParent("vim.version.version11", "vmodl.version.version0")
AddVersionParent("vim.version.version12", "vim.version.version10")
AddVersionParent("vim.version.version12", "vim.version.version11")
AddVersionParent("vim.version.version12", "vim.version.version12")
AddVersionParent("vim.version.version12", "vmodl.query.version.version1")
AddVersionParent("vim.version.version12", "vmodl.query.version.version2")
AddVersionParent("vim.version.version12", "vmodl.query.version.version3")
AddVersionParent("vim.version.version12", "vmodl.query.version.version4")
AddVersionParent("vim.version.version12", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version12", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version12", "vim.version.version1")
AddVersionParent("vim.version.version12", "vim.version.version2")
AddVersionParent("vim.version.version12", "vim.version.version3")
AddVersionParent("vim.version.version12", "vim.version.version4")
AddVersionParent("vim.version.version12", "vim.version.version5")
AddVersionParent("vim.version.version12", "vim.version.version6")
AddVersionParent("vim.version.version12", "vim.version.version7")
AddVersionParent("vim.version.version12", "vim.version.version8")
AddVersionParent("vim.version.version12", "vim.version.version9")
AddVersionParent("vim.version.version12", "vmodl.version.version2")
AddVersionParent("vim.version.version12", "vmodl.version.version1")
AddVersionParent("vim.version.version12", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version1", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version4")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version2")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version0")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.reflect.version.version2")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.reflect.version.version1")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version2")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.reflect.version.version1")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version2")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version0")
AddVersionParent("pbm.version.version11", "vim.version.version10")
AddVersionParent("pbm.version.version11", "vim.version.version11")
AddVersionParent("pbm.version.version11", "vmodl.query.version.version1")
AddVersionParent("pbm.version.version11", "vmodl.query.version.version2")
AddVersionParent("pbm.version.version11", "vmodl.query.version.version3")
AddVersionParent("pbm.version.version11", "vmodl.query.version.version4")
AddVersionParent("pbm.version.version11", "vmodl.reflect.version.version2")
AddVersionParent("pbm.version.version11", "vmodl.reflect.version.version1")
AddVersionParent("pbm.version.version11", "pbm.version.version11")
AddVersionParent("pbm.version.version11", "pbm.version.version1")
AddVersionParent("pbm.version.version11", "pbm.version.version2")
AddVersionParent("pbm.version.version11", "vim.version.version1")
AddVersionParent("pbm.version.version11", "vim.version.version2")
AddVersionParent("pbm.version.version11", "vim.version.version3")
AddVersionParent("pbm.version.version11", "vim.version.version4")
AddVersionParent("pbm.version.version11", "vim.version.version5")
AddVersionParent("pbm.version.version11", "vim.version.version6")
AddVersionParent("pbm.version.version11", "vim.version.version7")
AddVersionParent("pbm.version.version11", "vim.version.version8")
AddVersionParent("pbm.version.version11", "vim.version.version9")
AddVersionParent("pbm.version.version11", "vmodl.version.version2")
AddVersionParent("pbm.version.version11", "vmodl.version.version1")
AddVersionParent("pbm.version.version11", "vmodl.version.version0")
AddVersionParent("pbm.version.version13", "vim.version.version10")
AddVersionParent("pbm.version.version13", "vim.version.version11")
AddVersionParent("pbm.version.version13", "vim.version.version12")
AddVersionParent("pbm.version.version13", "vmodl.query.version.version1")
AddVersionParent("pbm.version.version13", "vmodl.query.version.version2")
AddVersionParent("pbm.version.version13", "vmodl.query.version.version3")
AddVersionParent("pbm.version.version13", "vmodl.query.version.version4")
AddVersionParent("pbm.version.version13", "vmodl.reflect.version.version2")
AddVersionParent("pbm.version.version13", "vmodl.reflect.version.version1")
AddVersionParent("pbm.version.version13", "pbm.version.version11")
AddVersionParent("pbm.version.version13", "pbm.version.version13")
AddVersionParent("pbm.version.version13", "pbm.version.version12")
AddVersionParent("pbm.version.version13", "pbm.version.version1")
AddVersionParent("pbm.version.version13", "pbm.version.version2")
AddVersionParent("pbm.version.version13", "vim.version.version13")
AddVersionParent("pbm.version.version13", "vim.version.version1")
AddVersionParent("pbm.version.version13", "vim.version.version2")
AddVersionParent("pbm.version.version13", "vim.version.version3")
AddVersionParent("pbm.version.version13", "vim.version.version4")
AddVersionParent("pbm.version.version13", "vim.version.version5")
AddVersionParent("pbm.version.version13", "vim.version.version6")
AddVersionParent("pbm.version.version13", "vim.version.version7")
AddVersionParent("pbm.version.version13", "vim.version.version8")
AddVersionParent("pbm.version.version13", "vim.version.version9")
AddVersionParent("pbm.version.version13", "vmodl.version.version2")
AddVersionParent("pbm.version.version13", "vmodl.version.version1")
AddVersionParent("pbm.version.version13", "vmodl.version.version0")
AddVersionParent("pbm.version.version12", "vim.version.version10")
AddVersionParent("pbm.version.version12", "vim.version.version11")
AddVersionParent("pbm.version.version12", "vim.version.version12")
AddVersionParent("pbm.version.version12", "vmodl.query.version.version1")
AddVersionParent("pbm.version.version12", "vmodl.query.version.version2")
AddVersionParent("pbm.version.version12", "vmodl.query.version.version3")
AddVersionParent("pbm.version.version12", "vmodl.query.version.version4")
AddVersionParent("pbm.version.version12", "vmodl.reflect.version.version2")
AddVersionParent("pbm.version.version12", "vmodl.reflect.version.version1")
AddVersionParent("pbm.version.version12", "pbm.version.version11")
AddVersionParent("pbm.version.version12", "pbm.version.version12")
AddVersionParent("pbm.version.version12", "pbm.version.version1")
AddVersionParent("pbm.version.version12", "pbm.version.version2")
AddVersionParent("pbm.version.version12", "vim.version.version1")
AddVersionParent("pbm.version.version12", "vim.version.version2")
AddVersionParent("pbm.version.version12", "vim.version.version3")
AddVersionParent("pbm.version.version12", "vim.version.version4")
AddVersionParent("pbm.version.version12", "vim.version.version5")
AddVersionParent("pbm.version.version12", "vim.version.version6")
AddVersionParent("pbm.version.version12", "vim.version.version7")
AddVersionParent("pbm.version.version12", "vim.version.version8")
AddVersionParent("pbm.version.version12", "vim.version.version9")
AddVersionParent("pbm.version.version12", "vmodl.version.version2")
AddVersionParent("pbm.version.version12", "vmodl.version.version1")
AddVersionParent("pbm.version.version12", "vmodl.version.version0")
AddVersionParent("vim.version.legacy", "vim.version.version10")
AddVersionParent("vim.version.legacy", "vim.version.version11")
AddVersionParent("vim.version.legacy", "vim.version.version12")
AddVersionParent("vim.version.legacy", "vmodl.query.version.version1")
AddVersionParent("vim.version.legacy", "vmodl.query.version.version2")
AddVersionParent("vim.version.legacy", "vmodl.query.version.version3")
AddVersionParent("vim.version.legacy", "vmodl.query.version.version4")
AddVersionParent("vim.version.legacy", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.legacy", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.legacy", "vim.version.legacy")
AddVersionParent("vim.version.legacy", "vim.version.version13")
AddVersionParent("vim.version.legacy", "vim.version.version1")
AddVersionParent("vim.version.legacy", "vim.version.version2")
AddVersionParent("vim.version.legacy", "vim.version.version3")
AddVersionParent("vim.version.legacy", "vim.version.version4")
AddVersionParent("vim.version.legacy", "vim.version.version5")
AddVersionParent("vim.version.legacy", "vim.version.version6")
AddVersionParent("vim.version.legacy", "vim.version.version7")
AddVersionParent("vim.version.legacy", "vim.version.version8")
AddVersionParent("vim.version.legacy", "vim.version.version9")
AddVersionParent("vim.version.legacy", "vmodl.version.version2")
AddVersionParent("vim.version.legacy", "vmodl.version.version1")
AddVersionParent("vim.version.legacy", "vmodl.version.version0")
AddVersionParent("pbm.version.version1", "pbm.version.version1")
AddVersionParent("pbm.version.version1", "vmodl.version.version2")
AddVersionParent("pbm.version.version1", "vmodl.version.version1")
AddVersionParent("pbm.version.version1", "vmodl.version.version0")
AddVersionParent("pbm.version.version2", "pbm.version.version1")
AddVersionParent("pbm.version.version2", "pbm.version.version2")
AddVersionParent("pbm.version.version2", "vmodl.version.version2")
AddVersionParent("pbm.version.version2", "vmodl.version.version1")
AddVersionParent("pbm.version.version2", "vmodl.version.version0")
AddVersionParent("vim.version.version13", "vim.version.version10")
AddVersionParent("vim.version.version13", "vim.version.version11")
AddVersionParent("vim.version.version13", "vim.version.version12")
AddVersionParent("vim.version.version13", "vmodl.query.version.version1")
AddVersionParent("vim.version.version13", "vmodl.query.version.version2")
AddVersionParent("vim.version.version13", "vmodl.query.version.version3")
AddVersionParent("vim.version.version13", "vmodl.query.version.version4")
AddVersionParent("vim.version.version13", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version13", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version13", "vim.version.version13")
AddVersionParent("vim.version.version13", "vim.version.version1")
AddVersionParent("vim.version.version13", "vim.version.version2")
AddVersionParent("vim.version.version13", "vim.version.version3")
AddVersionParent("vim.version.version13", "vim.version.version4")
AddVersionParent("vim.version.version13", "vim.version.version5")
AddVersionParent("vim.version.version13", "vim.version.version6")
AddVersionParent("vim.version.version13", "vim.version.version7")
AddVersionParent("vim.version.version13", "vim.version.version8")
AddVersionParent("vim.version.version13", "vim.version.version9")
AddVersionParent("vim.version.version13", "vmodl.version.version2")
AddVersionParent("vim.version.version13", "vmodl.version.version1")
AddVersionParent("vim.version.version13", "vmodl.version.version0")
AddVersionParent("vim.version.version1", "vmodl.query.version.version1")
AddVersionParent("vim.version.version1", "vim.version.version1")
AddVersionParent("vim.version.version1", "vmodl.version.version0")
AddVersionParent("vim.version.version2", "vmodl.query.version.version1")
AddVersionParent("vim.version.version2", "vim.version.version1")
AddVersionParent("vim.version.version2", "vim.version.version2")
AddVersionParent("vim.version.version2", "vmodl.version.version0")
AddVersionParent("vim.version.version3", "vmodl.query.version.version1")
AddVersionParent("vim.version.version3", "vim.version.version1")
AddVersionParent("vim.version.version3", "vim.version.version2")
AddVersionParent("vim.version.version3", "vim.version.version3")
AddVersionParent("vim.version.version3", "vmodl.version.version0")
AddVersionParent("vim.version.version4", "vmodl.query.version.version1")
AddVersionParent("vim.version.version4", "vim.version.version1")
AddVersionParent("vim.version.version4", "vim.version.version2")
AddVersionParent("vim.version.version4", "vim.version.version3")
AddVersionParent("vim.version.version4", "vim.version.version4")
AddVersionParent("vim.version.version4", "vmodl.version.version0")
AddVersionParent("vim.version.version5", "vmodl.query.version.version1")
AddVersionParent("vim.version.version5", "vmodl.query.version.version2")
AddVersionParent("vim.version.version5", "vim.version.version1")
AddVersionParent("vim.version.version5", "vim.version.version2")
AddVersionParent("vim.version.version5", "vim.version.version3")
AddVersionParent("vim.version.version5", "vim.version.version4")
AddVersionParent("vim.version.version5", "vim.version.version5")
AddVersionParent("vim.version.version5", "vmodl.version.version1")
AddVersionParent("vim.version.version5", "vmodl.version.version0")
AddVersionParent("vim.version.version6", "vmodl.query.version.version1")
AddVersionParent("vim.version.version6", "vmodl.query.version.version2")
AddVersionParent("vim.version.version6", "vmodl.query.version.version3")
AddVersionParent("vim.version.version6", "vim.version.version1")
AddVersionParent("vim.version.version6", "vim.version.version2")
AddVersionParent("vim.version.version6", "vim.version.version3")
AddVersionParent("vim.version.version6", "vim.version.version4")
AddVersionParent("vim.version.version6", "vim.version.version5")
AddVersionParent("vim.version.version6", "vim.version.version6")
AddVersionParent("vim.version.version6", "vmodl.version.version1")
AddVersionParent("vim.version.version6", "vmodl.version.version0")
AddVersionParent("vim.version.version7", "vmodl.query.version.version1")
AddVersionParent("vim.version.version7", "vmodl.query.version.version2")
AddVersionParent("vim.version.version7", "vmodl.query.version.version3")
AddVersionParent("vim.version.version7", "vmodl.query.version.version4")
AddVersionParent("vim.version.version7", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version2")
AddVersionParent("vim.version.version7", "vim.version.version3")
AddVersionParent("vim.version.version7", "vim.version.version4")
AddVersionParent("vim.version.version7", "vim.version.version5")
AddVersionParent("vim.version.version7", "vim.version.version6")
AddVersionParent("vim.version.version7", "vim.version.version7")
AddVersionParent("vim.version.version7", "vmodl.version.version2")
AddVersionParent("vim.version.version7", "vmodl.version.version1")
AddVersionParent("vim.version.version7", "vmodl.version.version0")
AddVersionParent("vim.version.version8", "vmodl.query.version.version1")
AddVersionParent("vim.version.version8", "vmodl.query.version.version2")
AddVersionParent("vim.version.version8", "vmodl.query.version.version3")
AddVersionParent("vim.version.version8", "vmodl.query.version.version4")
AddVersionParent("vim.version.version8", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version8", "vim.version.version1")
AddVersionParent("vim.version.version8", "vim.version.version2")
AddVersionParent("vim.version.version8", "vim.version.version3")
AddVersionParent("vim.version.version8", "vim.version.version4")
AddVersionParent("vim.version.version8", "vim.version.version5")
AddVersionParent("vim.version.version8", "vim.version.version6")
AddVersionParent("vim.version.version8", "vim.version.version7")
AddVersionParent("vim.version.version8", "vim.version.version8")
AddVersionParent("vim.version.version8", "vmodl.version.version2")
AddVersionParent("vim.version.version8", "vmodl.version.version1")
AddVersionParent("vim.version.version8", "vmodl.version.version0")
AddVersionParent("vim.version.version9", "vmodl.query.version.version1")
AddVersionParent("vim.version.version9", "vmodl.query.version.version2")
AddVersionParent("vim.version.version9", "vmodl.query.version.version3")
AddVersionParent("vim.version.version9", "vmodl.query.version.version4")
AddVersionParent("vim.version.version9", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version9", "vim.version.version1")
AddVersionParent("vim.version.version9", "vim.version.version2")
AddVersionParent("vim.version.version9", "vim.version.version3")
AddVersionParent("vim.version.version9", "vim.version.version4")
AddVersionParent("vim.version.version9", "vim.version.version5")
AddVersionParent("vim.version.version9", "vim.version.version6")
AddVersionParent("vim.version.version9", "vim.version.version7")
AddVersionParent("vim.version.version9", "vim.version.version8")
AddVersionParent("vim.version.version9", "vim.version.version9")
AddVersionParent("vim.version.version9", "vmodl.version.version2")
AddVersionParent("vim.version.version9", "vmodl.version.version1")
AddVersionParent("vim.version.version9", "vmodl.version.version0")
AddVersionParent("pbm.version.legacy", "vim.version.version10")
AddVersionParent("pbm.version.legacy", "vim.version.version11")
AddVersionParent("pbm.version.legacy", "vim.version.version12")
AddVersionParent("pbm.version.legacy", "vmodl.query.version.version1")
AddVersionParent("pbm.version.legacy", "vmodl.query.version.version2")
AddVersionParent("pbm.version.legacy", "vmodl.query.version.version3")
AddVersionParent("pbm.version.legacy", "vmodl.query.version.version4")
AddVersionParent("pbm.version.legacy", "vmodl.reflect.version.version2")
AddVersionParent("pbm.version.legacy", "vmodl.reflect.version.version1")
AddVersionParent("pbm.version.legacy", "pbm.version.version11")
AddVersionParent("pbm.version.legacy", "pbm.version.version13")
AddVersionParent("pbm.version.legacy", "pbm.version.version12")
AddVersionParent("pbm.version.legacy", "vim.version.legacy")
AddVersionParent("pbm.version.legacy", "pbm.version.version1")
AddVersionParent("pbm.version.legacy", "pbm.version.version2")
AddVersionParent("pbm.version.legacy", "vim.version.version13")
AddVersionParent("pbm.version.legacy", "vim.version.version1")
AddVersionParent("pbm.version.legacy", "vim.version.version2")
AddVersionParent("pbm.version.legacy", "vim.version.version3")
AddVersionParent("pbm.version.legacy", "vim.version.version4")
AddVersionParent("pbm.version.legacy", "vim.version.version5")
AddVersionParent("pbm.version.legacy", "vim.version.version6")
AddVersionParent("pbm.version.legacy", "vim.version.version7")
AddVersionParent("pbm.version.legacy", "vim.version.version8")
AddVersionParent("pbm.version.legacy", "vim.version.version9")
AddVersionParent("pbm.version.legacy", "pbm.version.legacy")
AddVersionParent("pbm.version.legacy", "vmodl.version.version2")
AddVersionParent("pbm.version.legacy", "vmodl.version.version1")
AddVersionParent("pbm.version.legacy", "vmodl.version.version0")
AddVersionParent("vmodl.version.version2", "vmodl.version.version2")
AddVersionParent("vmodl.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.version.version0", "vmodl.version.version0")

newestVersions.Add("pbm.version.version13")
stableVersions.Add("pbm.version.version13")
publicVersions.Add("pbm.version.version13")
oldestVersions.Add("pbm.version.version1")

CreateDataType("pbm.AboutInfo", "PbmAboutInfo", "vmodl.DynamicData", "pbm.version.version1", [("name", "string", "pbm.version.version1", 0), ("version", "string", "pbm.version.version1", 0), ("instanceUuid", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.ExtendedElementDescription", "PbmExtendedElementDescription", "vmodl.DynamicData", "pbm.version.version1", [("label", "string", "pbm.version.version1", 0), ("summary", "string", "pbm.version.version1", 0), ("key", "string", "pbm.version.version1", 0), ("messageCatalogKeyPrefix", "string", "pbm.version.version1", 0), ("messageArg", "vmodl.KeyAnyValue[]", "pbm.version.version1", F_OPTIONAL)])
CreateManagedType("pbm.PbmDebugManager", "PbmDebugManager", "vmodl.ManagedObject", "pbm.version.version1", None, [("addTag", "PbmAddTag", "pbm.version.version1", (("tag", "string", "pbm.version.version1", 0, None),("tagCategory", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("attachTagToDatastore", "PbmAttachTagToDatastore", "pbm.version.version1", (("tagName", "string", "pbm.version.version1", 0, None),("tagCategory", "string", "pbm.version.version1", 0, None),("datastoreMoId", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("detachTagFromDatastore", "PbmDetachTagFromDatastore", "pbm.version.version1", (("tagName", "string", "pbm.version.version1", 0, None),("tagCategory", "string", "pbm.version.version1", 0, None),("datastoreMoId", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("addTagCategory", "PbmAddTagCategory", "pbm.version.version1", (("categoryName", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("deleteTag", "PbmDeleteTag", "pbm.version.version1", (("tagName", "string[]", "pbm.version.version1", 0, None),("tagCategory", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("deleteCategory", "PbmDeleteCategory", "pbm.version.version1", (("category", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.View", ["pbm.fault.PBMFault", ])])
CreateDataType("pbm.ResourceAssociation", "PbmResourceAssociation", "vmodl.DynamicData", "pbm.version.version1", [("profileId", "string", "pbm.version.version1", 0), ("resourceId", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.ServerObjectRef", "PbmServerObjectRef", "vmodl.DynamicData", "pbm.version.version1", [("objectType", "string", "pbm.version.version1", 0), ("key", "string", "pbm.version.version1", 0), ("serverUuid", "string", "pbm.version.version1", F_OPTIONAL)])
CreateEnumType("pbm.ServerObjectRef.VvolType", "PbmVvolType", "pbm.version.version1", ["Config", "Data", "Swap"])
CreateEnumType("pbm.ServerObjectRef.ObjectType", "PbmObjectType", "pbm.version.version1", ["virtualMachine", "virtualMachineAndDisks", "virtualDiskId", "virtualDiskUUID", "datastore", "host", "cluster", "unknown"])
CreateManagedType("pbm.ServiceInstance", "PbmServiceInstance", "vmodl.ManagedObject", "pbm.version.version1", [("content", "pbm.ServiceInstanceContent", "pbm.version.version1", 0, "System.Anonymous")], [("retrieveContent", "PbmRetrieveServiceContent", "pbm.version.version1", (), (0, "pbm.ServiceInstanceContent", "pbm.ServiceInstanceContent"), "System.Anonymous", None), ("queryAtomFeedQsProviderIds", "PbmQueryAtomFeedQsProviderIds", "pbm.version.version1", (("providerType", "string", "pbm.version.version1", 0, None),), (F_OPTIONAL, "string[]", "string[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("getPbmDebugManager", "PbmDebugManager", "pbm.version.version1", (), (F_OPTIONAL, "pbm.PbmDebugManager", "pbm.PbmDebugManager"), "StorageProfile.View", None)])
CreateDataType("pbm.ServiceInstanceContent", "PbmServiceInstanceContent", "vmodl.DynamicData", "pbm.version.version1", [("aboutInfo", "pbm.AboutInfo", "pbm.version.version1", 0), ("sessionManager", "pbm.auth.SessionManager", "pbm.version.version1", 0), ("capabilityMetadataManager", "pbm.capability.CapabilityMetadataManager", "pbm.version.version1", 0), ("profileManager", "pbm.profile.ProfileManager", "pbm.version.version1", 0), ("complianceManager", "pbm.compliance.ComplianceManager", "pbm.version.version1", 0), ("placementSolver", "pbm.placement.PlacementSolver", "pbm.version.version1", 0), ("replicationManager", "pbm.replication.ReplicationManager", "pbm.version.version11", F_OPTIONAL)])
CreateManagedType("pbm.Task", "PbmTask", "vmodl.ManagedObject", "pbm.version.version1", None, None)
CreateDataType("pbm.association.AssociationMetadata", "PbmAssociationMetadata", "vmodl.DynamicData", "pbm.version.version1", [("associableEntityType", "string", "pbm.version.version1", 0), ("associableProfileType", "string", "pbm.version.version1", 0)])
CreateManagedType("pbm.association.AssociationProviderRegistry", "PbmAssociationProviderRegistry", "vmodl.ManagedObject", "pbm.version.version1", None, [("registerAssociationProvider", "PbmRegisterAssociationProvider", "pbm.version.version1", (("providerInfo", "pbm.association.provider.AssociationProviderInfo", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.PBMFault", ]), ("unregisterAssociationProvider", "PbmUnregisterAssociationProvider", "pbm.version.version1", (("uniqueId", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.NotFound", "pbm.fault.PBMFault", ])])
CreateManagedType("pbm.auth.SessionManager", "PbmSessionManager", "vmodl.ManagedObject", "pbm.version.version1", None, [("loginByToken", "PbmLoginByToken", "pbm.version.version2", (("delegatedTokenXml", "string", "pbm.version.version2", 0, None),), (0, "void", "void"), "System.Anonymous", ["pbm.fault.InvalidLogin", ]), ("logout", "PbmLogout", "pbm.version.version1", (), (0, "void", "void"), "StorageProfile.View", None)])
CreateDataType("pbm.capability.CapabilityMetadata", "PbmCapabilityMetadata", "vmodl.DynamicData", "pbm.version.version1", [("id", "pbm.capability.CapabilityMetadata.UniqueId", "pbm.version.version1", 0), ("summary", "pbm.ExtendedElementDescription", "pbm.version.version1", 0), ("mandatory", "boolean", "pbm.version.version1", F_OPTIONAL), ("hint", "boolean", "pbm.version.version1", F_OPTIONAL), ("keyId", "string", "pbm.version.version1", F_OPTIONAL), ("allowMultipleConstraints", "boolean", "pbm.version.version1", F_OPTIONAL), ("propertyMetadata", "pbm.capability.PropertyMetadata[]", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.CapabilityMetadata.UniqueId", "PbmCapabilityMetadataUniqueId", "vmodl.DynamicData", "pbm.version.version1", [("namespace", "string", "pbm.version.version1", 0), ("id", "string", "pbm.version.version1", 0)])
CreateManagedType("pbm.capability.CapabilityMetadataManager", "PbmCapabilityMetadataManager", "vmodl.ManagedObject", "pbm.version.version1", None, [("registerCapabilityMetadata", "PbmRegisterCapabilityMetadata", "pbm.version.version1", (("info", "pbm.capability.provider.CapabilityProviderInfo", "pbm.version.version1", 0, None),("capabilityMetadata", "pbm.capability.provider.CapabilityObjectMetadataInfo", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["vmodl.fault.InvalidArgument", ]), ("unregisterCapabilityMetadata", "PbmUnregisterCapabilityMetadata", "pbm.version.version1", (("info", "pbm.capability.provider.CapabilityProviderInfo", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.NotFound", ]), ("queryAtomFeedQsProviderIds", "PbmQueryCapabilityMetadataQsProviderIds", "pbm.version.version1", (), (F_OPTIONAL, "string[]", "string[]"), "StorageProfile.View", None), ("removeAllCapabilityMetadataDocuments", "removeAllCapabilityMetadataDocuments", "pbm.version.version1", (), (0, "boolean", "boolean"), "StorageProfile.Update", None)])
CreateDataType("pbm.capability.ConstraintInstance", "PbmCapabilityConstraintInstance", "vmodl.DynamicData", "pbm.version.version1", [("propertyInstance", "pbm.capability.PropertyInstance[]", "pbm.version.version1", 0)])
CreateEnumType("pbm.capability.Operator", "PbmCapabilityOperator", "pbm.version.version11", ["NOT"])
CreateDataType("pbm.capability.PropertyInstance", "PbmCapabilityPropertyInstance", "vmodl.DynamicData", "pbm.version.version1", [("id", "string", "pbm.version.version1", 0), ("operator", "string", "pbm.version.version11", F_OPTIONAL), ("value", "anyType", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.PropertyMetadata", "PbmCapabilityPropertyMetadata", "vmodl.DynamicData", "pbm.version.version1", [("id", "string", "pbm.version.version1", 0), ("summary", "pbm.ExtendedElementDescription", "pbm.version.version1", 0), ("mandatory", "boolean", "pbm.version.version1", 0), ("type", "pbm.capability.TypeInfo", "pbm.version.version1", F_OPTIONAL), ("defaultValue", "anyType", "pbm.version.version1", F_OPTIONAL), ("allowedValue", "anyType", "pbm.version.version1", F_OPTIONAL), ("requirementsTypeHint", "string", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.capability.TypeInfo", "PbmCapabilityTypeInfo", "vmodl.DynamicData", "pbm.version.version1", [("typeName", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.provider.CapabilityObjectMetadataInfo", "PbmCapabilityMetadataInfo", "vmodl.DynamicData", "pbm.version.version1", [("resourceType", "string", "pbm.version.version1", 0), ("capabilitySchema", "pbm.capability.provider.CapabilityObjectSchema[]", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.provider.CapabilityObjectMetadataPerCategory", "PbmCapabilityMetadataPerCategory", "vmodl.DynamicData", "pbm.version.version1", [("subCategory", "string", "pbm.version.version1", 0), ("capabilityMetadata", "pbm.capability.CapabilityMetadata[]", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.provider.CapabilityObjectSchema", "PbmCapabilitySchema", "vmodl.DynamicData", "pbm.version.version1", [("vendorInfo", "pbm.capability.provider.CapabilityObjectSchema.VendorInfo", "pbm.version.version1", 0), ("namespaceInfo", "pbm.capability.provider.CapabilityObjectSchema.NamespaceInfo", "pbm.version.version1", 0), ("lineOfService", "pbm.capability.provider.LineOfServiceInfo", "pbm.version.version11", F_OPTIONAL), ("capabilityMetadataPerCategory", "pbm.capability.provider.CapabilityObjectMetadataPerCategory[]", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.provider.CapabilityObjectSchema.VendorInfo", "PbmCapabilitySchemaVendorInfo", "vmodl.DynamicData", "pbm.version.version1", [("vendorUuid", "string", "pbm.version.version1", 0), ("info", "pbm.ExtendedElementDescription", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.provider.CapabilityObjectSchema.NamespaceInfo", "PbmCapabilityNamespaceInfo", "vmodl.DynamicData", "pbm.version.version1", [("version", "string", "pbm.version.version1", 0), ("namespace", "string", "pbm.version.version1", 0), ("info", "pbm.ExtendedElementDescription", "pbm.version.version11", F_OPTIONAL)])
CreateDataType("pbm.capability.provider.CapabilityObjectSchema.VendorResourceTypeInfo", "PbmCapabilityVendorResourceTypeInfo", "vmodl.DynamicData", "pbm.version.version1", [("resourceType", "string", "pbm.version.version1", 0), ("vendorNamespaceInfo", "pbm.capability.provider.CapabilityObjectSchema.VendorNamespaceInfo[]", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.provider.CapabilityObjectSchema.VendorNamespaceInfo", "PbmCapabilityVendorNamespaceInfo", "vmodl.DynamicData", "pbm.version.version1", [("vendorInfo", "pbm.capability.provider.CapabilityObjectSchema.VendorInfo", "pbm.version.version1", 0), ("namespaceInfo", "pbm.capability.provider.CapabilityObjectSchema.NamespaceInfo", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.provider.CapabilityProviderInfo", "PbmCapabilityProviderInfo", "vmodl.DynamicData", "pbm.version.version1", [("providerUuid", "string", "pbm.version.version1", 0), ("schemaId", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.provider.LineOfServiceInfo", "PbmLineOfServiceInfo", "vmodl.DynamicData", "pbm.version.version11", [("lineOfService", "string", "pbm.version.version11", 0), ("name", "pbm.ExtendedElementDescription", "pbm.version.version11", 0), ("description", "pbm.ExtendedElementDescription", "pbm.version.version11", F_OPTIONAL)])
CreateEnumType("pbm.capability.provider.LineOfServiceInfo.LineOfServiceEnum", "PbmLineOfServiceInfoLineOfServiceEnum", "pbm.version.version11", ["INSPECTION", "COMPRESSION", "ENCRYPTION", "REPLICATION", "CACHING", "PERSISTENCE", "DATA_PROVIDER", "DATASTORE_IO_CONTROL"])
CreateDataType("pbm.capability.provider.PersistenceBasedDataServiceInfo", "PbmPersistenceBasedDataServiceInfo", "pbm.capability.provider.LineOfServiceInfo", "pbm.version.version11", [("compatiblePersistenceSchemaNamespace", "string[]", "pbm.version.version11", F_OPTIONAL)])
CreateDataType("pbm.capability.provider.VaioDataServiceInfo", "PbmVaioDataServiceInfo", "pbm.capability.provider.LineOfServiceInfo", "pbm.version.version11", [])
CreateEnumType("pbm.capability.types.BuiltinGenericTypesEnum", "PbmBuiltinGenericType", "pbm.version.version1", ["VMW_RANGE", "VMW_SET"])
CreateEnumType("pbm.capability.types.BuiltinTypesEnum", "PbmBuiltinType", "pbm.version.version1", ["XSD_LONG", "XSD_SHORT", "XSD_INTEGER", "XSD_INT", "XSD_STRING", "XSD_BOOLEAN", "XSD_DOUBLE", "XSD_DATETIME", "VMW_TIMESPAN", "VMW_POLICY"])
CreateDataType("pbm.capability.types.DescriptiveValue", "PbmCapabilityDescription", "vmodl.DynamicData", "pbm.version.version1", [("description", "pbm.ExtendedElementDescription", "pbm.version.version1", 0), ("value", "anyType", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.types.DiscreteSet", "PbmCapabilityDiscreteSet", "vmodl.DynamicData", "pbm.version.version1", [("values", "anyType[]", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.types.Range", "PbmCapabilityRange", "vmodl.DynamicData", "pbm.version.version1", [("min", "anyType", "pbm.version.version1", 0), ("max", "anyType", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.types.TimeSpan", "PbmCapabilityTimeSpan", "vmodl.DynamicData", "pbm.version.version1", [("value", "int", "pbm.version.version1", 0), ("unit", "string", "pbm.version.version1", 0)])
CreateEnumType("pbm.capability.types.TimeUnitEnum", "PbmCapabilityTimeUnitType", "pbm.version.version1", ["SECONDS", "MINUTES", "HOURS", "DAYS", "WEEKS", "MONTHS", "YEARS"])
CreateManagedType("pbm.compliance.ComplianceManager", "PbmComplianceManager", "vmodl.ManagedObject", "pbm.version.version1", None, [("checkCompliance", "PbmCheckCompliance", "pbm.version.version1", (("entities", "pbm.ServerObjectRef[]", "pbm.version.version1", 0, None),("profile", "pbm.profile.ProfileId", "pbm.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.compliance.ComplianceResult[]", "pbm.compliance.ComplianceResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("fetchComplianceResult", "PbmFetchComplianceResult", "pbm.version.version1", (("entities", "pbm.ServerObjectRef[]", "pbm.version.version1", 0, None),("profile", "pbm.profile.ProfileId", "pbm.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.compliance.ComplianceResult[]", "pbm.compliance.ComplianceResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("checkRollupCompliance", "PbmCheckRollupCompliance", "pbm.version.version1", (("entity", "pbm.ServerObjectRef[]", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.compliance.RollupComplianceResult[]", "pbm.compliance.RollupComplianceResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("fetchRollupComplianceResult", "PbmFetchRollupComplianceResult", "pbm.version.version1", (("entity", "pbm.ServerObjectRef[]", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.compliance.RollupComplianceResult[]", "pbm.compliance.RollupComplianceResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryAtomFeedQsProviderIds", "PbmQueryComplianceQsProviderIds", "pbm.version.version1", (), (F_OPTIONAL, "string[]", "string[]"), "StorageProfile.View", None), ("queryByRollupComplianceStatus", "PbmQueryByRollupComplianceStatus", "pbm.version.version11", (("status", "string", "pbm.version.version11", 0, None),), (F_OPTIONAL, "pbm.ServerObjectRef[]", "pbm.ServerObjectRef[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("queryOutOfDateEntities", "PbmQueryOutOfDateEntities", "pbm.version.version11", (), (F_OPTIONAL, "pbm.ServerObjectRef[]", "pbm.ServerObjectRef[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ])])
CreateManagedType("pbm.compliance.ComplianceProviderRegistry", "PbmComplianceProviderRegistry", "vmodl.ManagedObject", "pbm.version.version1", None, [("registerComplianceProvider", "PbmRegisterComplianceProvider", "pbm.version.version1", (("providerInfo", "pbm.compliance.provider.ComplianceProviderInfo", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.PBMFault", ]), ("unregisterComplianceProvider", "PbmUnregisterComplianceProvider", "pbm.version.version1", (("uniqueId", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.NotFound", "pbm.fault.PBMFault", ])])
CreateDataType("pbm.compliance.ComplianceResult", "PbmComplianceResult", "vmodl.DynamicData", "pbm.version.version1", [("checkTime", "vmodl.DateTime", "pbm.version.version1", 0), ("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0), ("profile", "pbm.profile.ProfileId", "pbm.version.version1", F_OPTIONAL), ("complianceTaskStatus", "string", "pbm.version.version11", F_OPTIONAL), ("complianceStatus", "string", "pbm.version.version1", 0), ("mismatch", "boolean", "pbm.version.version1", 0), ("violatedPolicies", "pbm.compliance.PolicyStatus[]", "pbm.version.version1", F_OPTIONAL), ("errorCause", "vmodl.MethodFault[]", "pbm.version.version11", F_OPTIONAL), ("operationalStatus", "pbm.compliance.OperationalStatus", "pbm.version.version1", F_OPTIONAL), ("info", "pbm.ExtendedElementDescription", "pbm.version.version11", F_OPTIONAL)])
CreateEnumType("pbm.compliance.ComplianceResult.ComplianceStatus", "PbmComplianceStatus", "pbm.version.version1", ["compliant", "nonCompliant", "unknown", "notApplicable", "outOfDate"])
CreateEnumType("pbm.compliance.ComplianceResult.ComplianceTaskStatus", "PbmComplianceResultComplianceTaskStatus", "pbm.version.version11", ["inProgress", "success", "failed"])
CreateDataType("pbm.compliance.OperationalStatus", "PbmComplianceOperationalStatus", "vmodl.DynamicData", "pbm.version.version1", [("healthy", "boolean", "pbm.version.version1", F_OPTIONAL), ("operationETA", "vmodl.DateTime", "pbm.version.version1", F_OPTIONAL), ("operationProgress", "long", "pbm.version.version1", F_OPTIONAL), ("transitional", "boolean", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.compliance.PolicyStatus", "PbmCompliancePolicyStatus", "vmodl.DynamicData", "pbm.version.version1", [("expectedValue", "pbm.capability.CapabilityInstance", "pbm.version.version1", 0), ("currentValue", "pbm.capability.CapabilityInstance", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.compliance.RollupComplianceResult", "PbmRollupComplianceResult", "vmodl.DynamicData", "pbm.version.version1", [("oldestCheckTime", "vmodl.DateTime", "pbm.version.version1", 0), ("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0), ("overallComplianceStatus", "string", "pbm.version.version1", 0), ("overallComplianceTaskStatus", "string", "pbm.version.version11", F_OPTIONAL), ("result", "pbm.compliance.ComplianceResult[]", "pbm.version.version1", F_OPTIONAL), ("errorCause", "vmodl.MethodFault[]", "pbm.version.version11", F_OPTIONAL), ("profileMismatch", "boolean", "pbm.version.version1", 0)])
CreateDataType("pbm.fault.PBMFault", "PbmFault", "vmodl.MethodFault", "pbm.version.version1", None)
CreateDataType("pbm.fault.ProfileStorageFault", "PbmFaultProfileStorageFault", "pbm.fault.PBMFault", "pbm.version.version1", None)
CreateDataType("pbm.fault.ResourceInUse", "PbmResourceInUse", "pbm.fault.PBMFault", "pbm.version.version1", [("type", "vmodl.TypeName", "pbm.version.version1", F_OPTIONAL), ("name", "string", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.placement.CompatibilityResult", "PbmPlacementCompatibilityResult", "vmodl.DynamicData", "pbm.version.version1", [("hub", "pbm.placement.PlacementHub", "pbm.version.version1", 0), ("matchingResources", "pbm.placement.MatchingResources[]", "pbm.version.version11", F_OPTIONAL), ("howMany", "long", "pbm.version.version11", F_OPTIONAL), ("utilization", "pbm.placement.ResourceUtilization[]", "pbm.version.version11", F_OPTIONAL), ("warning", "vmodl.MethodFault[]", "pbm.version.version1", F_OPTIONAL), ("error", "vmodl.MethodFault[]", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.placement.HubCapacityInfo", "PbmPlacementHubCapacityInfo", "vmodl.DynamicData", "pbm.version.version1", [("capacityCategory", "string", "pbm.version.version1", 0), ("percentageRemaining", "long", "pbm.version.version1", 0)])
CreateDataType("pbm.placement.HubSelectionInfo", "PbmPlacementHubSelectionInfo", "vmodl.DynamicData", "pbm.version.version1", [("hub", "pbm.placement.PlacementHub", "pbm.version.version1", 0), ("capacityInfo", "pbm.placement.HubCapacityInfo[]", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.placement.MatchingResources", "PbmPlacementMatchingResources", "vmodl.DynamicData", "pbm.version.version11", [])
CreateDataType("pbm.placement.PlacementHub", "PbmPlacementHub", "vmodl.DynamicData", "pbm.version.version1", [("hubType", "string", "pbm.version.version1", 0), ("hubId", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.placement.PlacementHubInfo", "PbmPlacementHubInfo", "vmodl.DynamicData", "pbm.version.version1", [("hub", "pbm.placement.PlacementHub", "pbm.version.version1", 0), ("hubType", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.placement.PlacementSolution", "PbmPlacementSolution", "vmodl.DynamicData", "pbm.version.version1", [("subjectAssignment", "pbm.placement.SubjectAssignment[]", "pbm.version.version1", 0), ("cost", "pbm.placement.HubSelectionInfo[]", "pbm.version.version1", F_OPTIONAL)])
CreateManagedType("pbm.placement.PlacementSolver", "PbmPlacementSolver", "vmodl.ManagedObject", "pbm.version.version1", None, [("queryMatchingHub", "PbmQueryMatchingHub", "pbm.version.version1", (("hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", F_OPTIONAL, None),("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.placement.PlacementHub[]", "pbm.placement.PlacementHub[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryMatchingHubWithSpec", "PbmQueryMatchingHubWithSpec", "pbm.version.version1", (("hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", F_OPTIONAL, None),("createSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.placement.PlacementHub[]", "pbm.placement.PlacementHub[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("checkCompatibility", "PbmCheckCompatibility", "pbm.version.version1", (("hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", F_OPTIONAL, None),("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"), "StorageProfile.View", None), ("checkCompatibilityWithSpec", "PbmCheckCompatibilityWithSpec", "pbm.version.version1", (("hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", F_OPTIONAL, None),("profileSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"), "StorageProfile.View", None), ("checkRequirements", "PbmCheckRequirements", "pbm.version.version11", (("hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version11", F_OPTIONAL, None),("placementSubjectRef", "pbm.ServerObjectRef", "pbm.version.version11", F_OPTIONAL, None),("placementSubjectRequirement", "pbm.placement.Requirement[]", "pbm.version.version11", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ])])
CreateDataType("pbm.placement.PlacementSubject", "PbmPlacementSubject", "vmodl.DynamicData", "pbm.version.version1", [("subjectType", "string", "pbm.version.version1", 0), ("subjectId", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.placement.Requirement", "PbmPlacementRequirement", "vmodl.DynamicData", "pbm.version.version11", None)
CreateDataType("pbm.placement.ResourceUtilization", "PbmPlacementResourceUtilization", "vmodl.DynamicData", "pbm.version.version11", [("name", "pbm.ExtendedElementDescription", "pbm.version.version11", 0), ("description", "pbm.ExtendedElementDescription", "pbm.version.version11", 0), ("availableBefore", "long", "pbm.version.version11", F_OPTIONAL), ("availableAfter", "long", "pbm.version.version11", F_OPTIONAL), ("total", "long", "pbm.version.version11", F_OPTIONAL)])
CreateDataType("pbm.placement.SubjectAssignment", "PbmPlacementSubjectAssignment", "vmodl.DynamicData", "pbm.version.version1", [("subject", "pbm.placement.PlacementSubject", "pbm.version.version1", 0), ("hub", "pbm.placement.PlacementHub", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.profile.ApplyProfileOutcome", "PbmProfileApplyOutcome", "vmodl.DynamicData", "pbm.version.version1", [("profileId", "pbm.profile.ProfileId", "pbm.version.version1", 0), ("reconfigOutcome", "pbm.profile.ReconfigOutcome[]", "pbm.version.version1", F_OPTIONAL), ("fault", "vmodl.MethodFault", "pbm.version.version11", F_OPTIONAL)])
CreateDataType("pbm.profile.CapabilityBasedProfileCreateSpec", "PbmCapabilityProfileCreateSpec", "vmodl.DynamicData", "pbm.version.version1", [("name", "string", "pbm.version.version1", 0), ("description", "string", "pbm.version.version1", F_OPTIONAL), ("category", "string", "pbm.version.version11", F_OPTIONAL), ("resourceType", "pbm.profile.ResourceType", "pbm.version.version1", 0), ("constraints", "pbm.profile.CapabilityConstraints", "pbm.version.version1", 0)])
CreateDataType("pbm.profile.CapabilityBasedProfileUpdateSpec", "PbmCapabilityProfileUpdateSpec", "vmodl.DynamicData", "pbm.version.version1", [("name", "string", "pbm.version.version1", F_OPTIONAL), ("description", "string", "pbm.version.version1", F_OPTIONAL), ("constraints", "pbm.profile.CapabilityConstraints", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.profile.CapabilityConstraints", "PbmCapabilityConstraints", "vmodl.DynamicData", "pbm.version.version1", None)
CreateDataType("pbm.profile.ChangeAssociationOp", "PbmProfileChangeAssociationOp", "vmodl.DynamicData", "pbm.version.version1", [("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0)])
CreateDataType("pbm.profile.DataServiceToPoliciesMap", "PbmDataServiceToPoliciesMap", "vmodl.DynamicData", "pbm.version.version11", [("dataServicePolicy", "pbm.profile.ProfileId", "pbm.version.version11", 0), ("parentStoragePolicies", "pbm.profile.ProfileId[]", "pbm.version.version11", F_OPTIONAL), ("fault", "vmodl.MethodFault", "pbm.version.version11", F_OPTIONAL)])
CreateDataType("pbm.profile.DefaultProfileInfo", "PbmDefaultProfileInfo", "vmodl.DynamicData", "pbm.version.version2", [("datastores", "pbm.placement.PlacementHub[]", "pbm.version.version2", 0), ("defaultProfile", "pbm.profile.Profile", "pbm.version.version2", F_OPTIONAL)])
CreateDataType("pbm.profile.DissociateOp", "PbmProfileDissociateOp", "pbm.profile.ChangeAssociationOp", "pbm.version.version1", [("profile", "pbm.profile.ProfileId", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.profile.IofilterInfo", "PbmIofilterInfo", "vmodl.DynamicData", "pbm.version.version2", [("vibId", "string", "pbm.version.version2", 0), ("filterType", "string", "pbm.version.version2", F_OPTIONAL)])
CreateEnumType("pbm.profile.IofilterInfo.FilterType", "PbmIofilterInfoFilterType", "pbm.version.version1", ["INSPECTION", "COMPRESSION", "ENCRYPTION", "REPLICATION", "CACHE", "DATAPROVIDER", "DATASTOREIOCONTROL"])
CreateDataType("pbm.profile.PolicyAssociation", "PbmPolicyAssociation", "vmodl.DynamicData", "pbm.version.version11", [("entity", "pbm.ServerObjectRef", "pbm.version.version11", 0), ("policySpec", "vim.vm.ProfileSpec", "pbm.version.version11", F_OPTIONAL), ("defaultPolicy", "boolean", "pbm.version.version11", 0), ("hub", "pbm.placement.PlacementHub", "pbm.version.version11", 0)])
CreateDataType("pbm.profile.Profile", "PbmProfile", "vmodl.DynamicData", "pbm.version.version1", [("profileId", "pbm.profile.ProfileId", "pbm.version.version1", 0), ("name", "string", "pbm.version.version1", 0), ("description", "string", "pbm.version.version1", F_OPTIONAL), ("creationTime", "vmodl.DateTime", "pbm.version.version1", 0), ("createdBy", "string", "pbm.version.version1", 0), ("lastUpdatedTime", "vmodl.DateTime", "pbm.version.version1", 0), ("lastUpdatedBy", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.profile.ProfileId", "PbmProfileId", "vmodl.DynamicData", "pbm.version.version1", [("uniqueId", "string", "pbm.version.version1", 0)])
CreateManagedType("pbm.profile.ProfileManager", "PbmProfileProfileManager", "vmodl.ManagedObject", "pbm.version.version1", None, [("fetchResourceType", "PbmFetchResourceType", "pbm.version.version1", (), (F_OPTIONAL, "pbm.profile.ResourceType[]", "pbm.profile.ResourceType[]"), "StorageProfile.View", None), ("fetchVendorInfo", "PbmFetchVendorInfo", "pbm.version.version1", (("resourceType", "pbm.profile.ResourceType", "pbm.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.capability.provider.CapabilityObjectSchema.VendorResourceTypeInfo[]", "pbm.capability.provider.CapabilityObjectSchema.VendorResourceTypeInfo[]"), "StorageProfile.View", None), ("fetchCapabilityMetadata", "PbmFetchCapabilityMetadata", "pbm.version.version1", (("resourceType", "pbm.profile.ResourceType", "pbm.version.version1", F_OPTIONAL, None),("vendorUuid", "string", "pbm.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.capability.provider.CapabilityObjectMetadataPerCategory[]", "pbm.capability.provider.CapabilityObjectMetadataPerCategory[]"), "StorageProfile.View", None), ("fetchCapabilitySchema", "PbmFetchCapabilitySchema", "pbm.version.version11", (("vendorUuid", "string", "pbm.version.version11", F_OPTIONAL, None),("lineOfService", "string[]", "pbm.version.version11", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.capability.provider.CapabilityObjectSchema[]", "pbm.capability.provider.CapabilityObjectSchema[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("create", "PbmCreate", "pbm.version.version1", (("createSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version1", 0, None),), (0, "pbm.profile.ProfileId", "pbm.profile.ProfileId"), "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.ProfileStorageFault", "pbm.fault.DuplicateName", ]), ("update", "PbmUpdate", "pbm.version.version1", (("profileId", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),("updateSpec", "pbm.profile.CapabilityBasedProfileUpdateSpec", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.ProfileStorageFault", ]), ("delete", "PbmDelete", "pbm.version.version1", (("profileId", "pbm.profile.ProfileId[]", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.profile.ProfileOperationOutcome[]", "pbm.profile.ProfileOperationOutcome[]"), "StorageProfile.Update", None), ("associate", "PbmAssociate", "pbm.version.version1", (("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0, None),("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),("replSpec", "vim.vm.replication.ReplicationSpec", "pbm.version.version11", F_OPTIONAL, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.PBMFault", ]), ("dissociate", "PbmDissociate", "pbm.version.version1", (("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0, None),("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("reconfigEntityAssociations", "PbmReconfigEntityAssociations", "pbm.version.version1", (("ops", "pbm.profile.ChangeAssociationOp[]", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.PBMFault", ]), ("queryProfile", "PbmQueryProfile", "pbm.version.version1", (("resourceType", "pbm.profile.ResourceType", "pbm.version.version1", 0, None),("profileCategory", "string", "pbm.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", ]), ("queryDefaultCapabilityValues", "PbmQueryDefaultCapabilityValues", "pbm.version.version1", (("entity", "pbm.ServerObjectRef", "pbm.version.version1", F_OPTIONAL, None),("vvolType", "string[]", "pbm.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("retrieveContent", "PbmRetrieveContent", "pbm.version.version1", (("profileIds", "pbm.profile.ProfileId[]", "pbm.version.version1", 0, None),), (0, "pbm.profile.Profile[]", "pbm.profile.Profile[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", ]), ("queryAssociatedProfiles", "PbmQueryAssociatedProfiles", "pbm.version.version1", (("entities", "pbm.ServerObjectRef[]", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.profile.QueryProfileResult[]", "pbm.profile.QueryProfileResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryAssociatedProfile", "PbmQueryAssociatedProfile", "pbm.version.version1", (("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryAssociatedEntity", "PbmQueryAssociatedEntity", "pbm.version.version1", (("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),("entityType", "string", "pbm.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.ServerObjectRef[]", "pbm.ServerObjectRef[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("retrieveContentAsString", "PbmRetrieveProfileContentAsString", "pbm.version.version1", (("profileId", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),("hub", "pbm.placement.PlacementHub", "pbm.version.version1", 0, None),("spec", "vim.vm.replication.ReplicationSpec", "pbm.version.version11", F_OPTIONAL, None),), (F_OPTIONAL, "string", "string"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("retrieveContentForHub", "PbmRetrieveProfileContentForHub", "pbm.version.version11", (("profileId", "pbm.profile.ProfileId", "pbm.version.version11", 0, None),("hub", "pbm.placement.PlacementHub", "pbm.version.version11", 0, None),), (F_OPTIONAL, "pbm.profile.Profile", "pbm.profile.Profile"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("retrieveContentAsStringBySpec", "PbmRetrieveProfileContentAsStringBySpec", "pbm.version.version2", (("profileSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version2", 0, None),("hub", "pbm.placement.PlacementHub", "pbm.version.version2", 0, None),), (F_OPTIONAL, "string", "string"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("applyAssociated", "PbmApplyAssociated", "pbm.version.version1", (("entities", "pbm.ServerObjectRef[]", "pbm.version.version1", 0, None),("applyOnChildren", "boolean", "pbm.version.version1", F_OPTIONAL, None),), (0, "pbm.profile.ReconfigOutcome[]", "pbm.profile.ReconfigOutcome[]"), "StorageProfile.Update", None), ("applyProfile", "PbmApplyProfile", "pbm.version.version1", (("profiles", "pbm.profile.ProfileId[]", "pbm.version.version1", 0, None),), (0, "pbm.profile.ApplyProfileOutcome[]", "pbm.profile.ApplyProfileOutcome[]"), "StorageProfile.Update", None), ("queryDefaultRequirementProfile", "PbmQueryDefaultRequirementProfile", "pbm.version.version2", (("hub", "pbm.placement.PlacementHub", "pbm.version.version2", 0, None),), (F_OPTIONAL, "pbm.profile.ProfileId", "pbm.profile.ProfileId"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault", ]), ("resetDefaultRequirementProfile", "PbmResetDefaultRequirementProfile", "pbm.version.version1", (("profile", "pbm.profile.ProfileId", "pbm.version.version1", F_OPTIONAL, None),), (0, "void", "void"), "StorageProfile.Update", None), ("configureErrorMode", "ConfigureErrorMode", "pbm.version.version1", (("enable", "boolean", "pbm.version.version1", 0, None),("methodToFail", "string", "pbm.version.version1", F_OPTIONAL, None),("fault", "string", "pbm.version.version1", F_OPTIONAL, None),), (0, "void", "void"), "StorageProfile.Update", ["vmodl.fault.NotSupported", ]), ("assignDefaultRequirementProfile", "PbmAssignDefaultRequirementProfile", "pbm.version.version2", (("profile", "pbm.profile.ProfileId", "pbm.version.version2", 0, None),("datastores", "pbm.placement.PlacementHub[]", "pbm.version.version2", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.LegacyHubsNotSupported", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault", ]), ("findApplicableDefaultProfile", "PbmFindApplicableDefaultProfile", "pbm.version.version2", (("datastores", "pbm.placement.PlacementHub[]", "pbm.version.version2", 0, None),), (F_OPTIONAL, "pbm.profile.Profile[]", "pbm.profile.Profile[]"), "StorageProfile.View", ["pbm.fault.LegacyHubsNotSupported", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault", "vmodl.fault.InvalidArgument", ]), ("queryDefaultRequirementProfiles", "PbmQueryDefaultRequirementProfiles", "pbm.version.version2", (("datastores", "pbm.placement.PlacementHub[]", "pbm.version.version2", 0, None),), (0, "pbm.profile.DefaultProfileInfo[]", "pbm.profile.DefaultProfileInfo[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault", ]), ("resetVSanDefaultProfile", "PbmResetVSanDefaultProfile", "pbm.version.version2", (), (0, "void", "void"), "StorageProfile.Update", None), ("querySpaceStatsForStorageContainer", "PbmQuerySpaceStatsForStorageContainer", "pbm.version.version2", (("datastore", "pbm.ServerObjectRef", "pbm.version.version2", 0, None),("capabilityProfileId", "pbm.profile.ProfileId[]", "pbm.version.version2", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.profile.provider.DatastoreSpaceStatistics[]", "pbm.profile.provider.DatastoreSpaceStatistics[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("queryIOFiltersFromProfileId", "PbmQueryIOFiltersFromProfileId", "pbm.version.version2", (("profileIds", "pbm.profile.ProfileId[]", "pbm.version.version2", 0, None),), (0, "pbm.profile.ProfileToIofilterMap[]", "pbm.profile.ProfileToIofilterMap[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryIOFilterInfo", "PbmQueryIOFilterInfo", "pbm.version.version2", (("vibIds", "string[]", "pbm.version.version2", 0, None),), (0, "pbm.profile.IofilterInfo[]", "pbm.profile.IofilterInfo[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryAssociatedEntities", "PbmQueryAssociatedEntities", "pbm.version.version11", (("profiles", "pbm.profile.ProfileId[]", "pbm.version.version11", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.profile.QueryProfileResult[]", "pbm.profile.QueryProfileResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryParentStoragePolicies", "PbmQueryParentStoragePolicies", "pbm.version.version11", (("policy", "pbm.profile.ProfileId[]", "pbm.version.version11", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.profile.DataServiceToPoliciesMap[]", "pbm.profile.DataServiceToPoliciesMap[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("preProvisionProcess", "PbmPreProvisionProcess", "pbm.version.version11", (("entityAssociations", "pbm.profile.EntityAssociations", "pbm.version.version11", 0, None),), (0, "pbm.profile.EntityAssociations", "pbm.profile.EntityAssociations"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("findTargetProfileCapabilityValues", "PbmFindTargetProfileCapabilityValues", "pbm.version.version12", (("associatedPolicyCapabilities", "pbm.capability.AssociatedPolicyCapabilities[]", "pbm.version.version12", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.capability.AssociatedPolicyCapabilities[]", "pbm.capability.AssociatedPolicyCapabilities[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryPmemPolicyInfo", "PbmQueryPmemPolicyInfo", "pbm.version.version12", (("profileIds", "pbm.profile.ProfileId[]", "pbm.version.version12", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.profile.PmemPolicyInfo[]", "pbm.profile.PmemPolicyInfo[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ])])
CreateDataType("pbm.profile.ProfileOperationOutcome", "PbmProfileOperationOutcome", "vmodl.DynamicData", "pbm.version.version1", [("profileId", "pbm.profile.ProfileId", "pbm.version.version1", 0), ("fault", "vmodl.MethodFault", "pbm.version.version1", F_OPTIONAL)])
CreateManagedType("pbm.profile.ProfileProviderRegistry", "PbmProfileProviderRegistry", "vmodl.ManagedObject", "pbm.version.version1", None, [("registerProfileProvider", "PbmRegisterProfileProvider", "pbm.version.version1", (("providerInfo", "pbm.profile.provider.ProfileProviderInfo", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.View", ["pbm.fault.AlreadyExists", "vmodl.fault.InvalidArgument", ]), ("unregisterProfileProvider", "PbmUnregisterProfileProvider", "pbm.version.version1", (("providerUid", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.View", ["pbm.fault.NotFound", ])])
CreateDataType("pbm.profile.ProfileToIofilterMap", "PbmProfileToIofilterMap", "vmodl.DynamicData", "pbm.version.version2", [("key", "pbm.profile.ProfileId", "pbm.version.version2", 0), ("iofilters", "pbm.profile.IofilterInfo[]", "pbm.version.version2", F_OPTIONAL), ("fault", "vmodl.MethodFault", "pbm.version.version2", F_OPTIONAL)])
CreateDataType("pbm.profile.ProfileType", "PbmProfileType", "vmodl.DynamicData", "pbm.version.version1", [("uniqueId", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.profile.QueryProfileResult", "PbmQueryProfileResult", "vmodl.DynamicData", "pbm.version.version1", [("object", "pbm.ServerObjectRef", "pbm.version.version1", 0), ("profileId", "pbm.profile.ProfileId[]", "pbm.version.version1", F_OPTIONAL), ("fault", "vmodl.MethodFault", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.profile.ReconfigOutcome", "PbmProfileReconfigOutcome", "vmodl.DynamicData", "pbm.version.version1", [("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0), ("taskMoid", "string", "pbm.version.version1", F_OPTIONAL), ("fault", "vmodl.MethodFault", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.profile.ResourceType", "PbmProfileResourceType", "vmodl.DynamicData", "pbm.version.version1", [("resourceType", "string", "pbm.version.version1", 0)])
CreateEnumType("pbm.profile.ResourceTypeEnum", "PbmProfileResourceTypeEnum", "pbm.version.version1", ["STORAGE"])
CreateDataType("pbm.profile.SubProfileCapabilityConstraints", "PbmCapabilitySubProfileConstraints", "pbm.profile.CapabilityConstraints", "pbm.version.version1", [("subProfiles", "pbm.profile.SubProfileCapabilityConstraints.SubProfile[]", "pbm.version.version1", 0)])
CreateDataType("pbm.profile.SubProfileCapabilityConstraints.SubProfile", "PbmCapabilitySubProfile", "vmodl.DynamicData", "pbm.version.version1", [("name", "string", "pbm.version.version1", 0), ("capability", "pbm.capability.CapabilityInstance[]", "pbm.version.version1", 0), ("forceProvision", "boolean", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.profile.SubProfileCapabilityConstraints.SubProfileWithCandidates", "PbmCapabilitySubProfileWithCandidates", "pbm.profile.SubProfileCapabilityConstraints.SubProfile", "pbm.version.version1", [("candidateHubs", "pbm.placement.PlacementHub[]", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.profile.VmAssociations", "PbmVmAssociations", "vmodl.DynamicData", "pbm.version.version11", [("operation", "string", "pbm.version.version11", 0), ("vm", "pbm.ServerObjectRef", "pbm.version.version11", F_OPTIONAL), ("policyAssociations", "pbm.profile.PolicyAssociation[]", "pbm.version.version11", F_OPTIONAL), ("fault", "vmodl.MethodFault", "pbm.version.version11", F_OPTIONAL)])
CreateEnumType("pbm.profile.VmAssociations.Operation", "PbmVmOperation", "pbm.version.version11", ["CREATE", "RECONFIGURE", "MIGRATE", "CLONE"])
CreateDataType("pbm.profile.provider.DatastoreSpaceStatistics", "PbmDatastoreSpaceStatistics", "vmodl.DynamicData", "pbm.version.version2", [("profileId", "string", "pbm.version.version2", F_OPTIONAL), ("physicalTotalInMB", "long", "pbm.version.version2", 0), ("physicalFreeInMB", "long", "pbm.version.version2", 0), ("physicalUsedInMB", "long", "pbm.version.version2", 0), ("logicalLimitInMB", "long", "pbm.version.version2", F_OPTIONAL), ("logicalFreeInMB", "long", "pbm.version.version2", 0), ("logicalUsedInMB", "long", "pbm.version.version2", 0)])
CreateEnumType("pbm.provider.AtomFeedQsProviderType", "PbmAtomFeedQsProviderTye", "pbm.version.version1", ["ASSOCIATION", "COMPLIANCE", "CAPABILITY_METADATA", "CAPABILITY_PROFILE", "REQUIREMENTS_PROFILE"])
CreateManagedType("pbm.provider.Provider", "PbmProvider", "vmodl.ManagedObject", "pbm.version.version1", None, None)
CreateDataType("pbm.provider.ProviderInfo", "PbmProviderInfo", "vmodl.DynamicData", "pbm.version.version1", [("uniqueId", "string", "pbm.version.version1", 0), ("location", "string", "pbm.version.version1", 0), ("description", "string", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.replication.QueryReplicationGroupResult", "PbmQueryReplicationGroupResult", "vmodl.DynamicData", "pbm.version.version11", [("object", "pbm.ServerObjectRef", "pbm.version.version11", 0), ("replicationGroupId", "vim.vm.replication.ReplicationGroupId", "pbm.version.version11", F_OPTIONAL), ("fault", "vmodl.MethodFault", "pbm.version.version11", F_OPTIONAL)])
CreateManagedType("pbm.replication.ReplicationManager", "PbmReplicationManager", "vmodl.ManagedObject", "pbm.version.version11", None, [("queryReplicationGroups", "PbmQueryReplicationGroups", "pbm.version.version11", (("entities", "pbm.ServerObjectRef[]", "pbm.version.version11", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.replication.QueryReplicationGroupResult[]", "pbm.replication.QueryReplicationGroupResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ])])
CreateManagedType("pbm.AtomFeedQsProvider", "PbmAtomFeedProvider", "pbm.provider.Provider", "pbm.version.version1", None, [("queryAtomFeedQsProviderIds", "PbmProviderQueryAtomFeedQsProviderIds", "pbm.version.version1", (), (F_OPTIONAL, "string[]", "string[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ])])
CreateManagedType("pbm.association.provider.AssociationProvider", "PbmAssociationProvider", "pbm.provider.Provider", "pbm.version.version1", None, [("queryAssociatedProfiles", "PbmAssociationProviderQueryAssociatedProfiles", "pbm.version.version1", (("entities", "pbm.ServerObjectRef[]", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.profile.QueryProfileResult[]", "pbm.profile.QueryProfileResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryAssociatedProfile", "PbmAssociationProviderQueryAssociatedProfile", "pbm.version.version1", (("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("queryAssociatedEntity", "PbmAssociationProviderQueryAssociatedEntity", "pbm.version.version1", (("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),("entityType", "string", "pbm.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.ServerObjectRef[]", "pbm.ServerObjectRef[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ])])
CreateDataType("pbm.association.provider.AssociationProviderInfo", "PbmAssociationProviderInfo", "pbm.provider.ProviderInfo", "pbm.version.version1", [("provider", "pbm.association.provider.AssociationProvider", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.CapabilityInstance", "PbmCapabilityInstance", "vmodl.DynamicData", "pbm.version.version1", [("id", "pbm.capability.CapabilityMetadata.UniqueId", "pbm.version.version1", 0), ("constraint", "pbm.capability.ConstraintInstance[]", "pbm.version.version1", 0)])
CreateDataType("pbm.capability.GenericTypeInfo", "PbmCapabilityGenericTypeInfo", "pbm.capability.TypeInfo", "pbm.version.version1", [("genericTypeName", "string", "pbm.version.version1", 0)])
CreateManagedType("pbm.compliance.provider.ComplianceProvider", "PbmComplianceProvider", "pbm.provider.Provider", "pbm.version.version1", None, [("checkCompliance", "PbmProviderCheckCompliance", "pbm.version.version1", (("entities", "pbm.ServerObjectRef[]", "pbm.version.version1", 0, None),("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),), (0, "pbm.compliance.ComplianceResult[]", "pbm.compliance.ComplianceResult[]"), "StorageProfile.View", None)])
CreateDataType("pbm.compliance.provider.ComplianceProviderInfo", "PbmComplianceProviderInfo", "pbm.provider.ProviderInfo", "pbm.version.version1", [("metadata", "pbm.association.AssociationMetadata", "pbm.version.version1", 0), ("provider", "pbm.compliance.provider.ComplianceProvider", "pbm.version.version1", 0)])
CreateDataType("pbm.fault.AlreadyExists", "PbmAlreadyExists", "pbm.fault.PBMFault", "pbm.version.version1", [("name", "string", "pbm.version.version1", F_OPTIONAL)])
CreateDataType("pbm.fault.CompatibilityCheckFault", "PbmCompatibilityCheckFault", "pbm.fault.PBMFault", "pbm.version.version1", [("hub", "pbm.placement.PlacementHub", "pbm.version.version1", 0)])
CreateDataType("pbm.fault.DefaultProfileAppliesFault", "PbmDefaultProfileAppliesFault", "pbm.fault.CompatibilityCheckFault", "pbm.version.version1", None)
CreateDataType("pbm.fault.DuplicateName", "PbmDuplicateName", "pbm.fault.PBMFault", "pbm.version.version1", [("name", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.fault.InvalidLogin", "PbmFaultInvalidLogin", "pbm.fault.PBMFault", "pbm.version.version2", None)
CreateDataType("pbm.fault.LegacyHubsNotSupported", "PbmLegacyHubsNotSupported", "pbm.fault.PBMFault", "pbm.version.version2", [("hubs", "pbm.placement.PlacementHub[]", "pbm.version.version2", 0)])
CreateDataType("pbm.fault.NonExistentHubs", "PbmNonExistentHubs", "pbm.fault.PBMFault", "pbm.version.version2", [("hubs", "pbm.placement.PlacementHub[]", "pbm.version.version2", 0)])
CreateDataType("pbm.fault.NotFound", "PbmFaultNotFound", "pbm.fault.PBMFault", "pbm.version.version1", None)
CreateDataType("pbm.fault.PropertyMismatchFault", "PbmPropertyMismatchFault", "pbm.fault.CompatibilityCheckFault", "pbm.version.version1", [("capabilityInstanceId", "pbm.capability.CapabilityMetadata.UniqueId", "pbm.version.version1", 0), ("requirementPropertyInstance", "pbm.capability.PropertyInstance", "pbm.version.version1", 0)])
CreateDataType("pbm.placement.CapabilityConstraintsRequirement", "PbmPlacementCapabilityConstraintsRequirement", "pbm.placement.Requirement", "pbm.version.version11", [("constraints", "pbm.profile.CapabilityConstraints", "pbm.version.version11", 0)])
CreateDataType("pbm.placement.CapabilityProfileRequirement", "PbmPlacementCapabilityProfileRequirement", "pbm.placement.Requirement", "pbm.version.version11", [("profileId", "pbm.profile.ProfileId", "pbm.version.version11", 0)])
CreateDataType("pbm.placement.MatchingReplicationResources", "PbmPlacementMatchingReplicationResources", "pbm.placement.MatchingResources", "pbm.version.version11", [("replicationGroup", "vim.vm.replication.ReplicationGroupId[]", "pbm.version.version11", F_OPTIONAL)])
CreateManagedType("pbm.placement.PlacementHubFinder", "PbmPlacementHubFinder", "pbm.provider.Provider", "pbm.version.version1", None, [("findMatchingHub", "PbmPlacementHubFinderFindMatchingHub", "pbm.version.version1", (("hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", F_OPTIONAL, None),("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("findMatchingHubWithSpec", "PbmPlacementHubFinderFindMatchingHubWithSpec", "pbm.version.version1", (("hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", F_OPTIONAL, None),("createSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"), "StorageProfile.View", ["pbm.fault.PBMFault", ])])
CreateDataType("pbm.placement.PlacementHubFinder.Info", "PbmPlacementHubFinderInfo", "pbm.provider.ProviderInfo", "pbm.version.version1", [("finderType", "string", "pbm.version.version1", 0), ("supportedHubType", "string", "pbm.version.version1", 0), ("finder", "pbm.placement.PlacementHubFinder", "pbm.version.version1", 0)])
CreateDataType("pbm.profile.AssociateOp", "PbmProfileAssociateOp", "pbm.profile.ChangeAssociationOp", "pbm.version.version1", [("profile", "pbm.profile.ProfileId", "pbm.version.version1", 0), ("diskEntity", "pbm.ServerObjectRef[]", "pbm.version.version11", F_OPTIONAL), ("replicationSpec", "vim.vm.replication.ReplicationSpec", "pbm.version.version11", F_OPTIONAL), ("hub", "pbm.placement.PlacementHub", "pbm.version.version12", F_OPTIONAL)])
CreateDataType("pbm.profile.CapabilityBasedProfile", "PbmCapabilityProfile", "pbm.profile.Profile", "pbm.version.version1", [("profileCategory", "string", "pbm.version.version1", 0), ("resourceType", "pbm.profile.ResourceType", "pbm.version.version1", 0), ("constraints", "pbm.profile.CapabilityConstraints", "pbm.version.version1", 0), ("generationId", "long", "pbm.version.version1", F_OPTIONAL), ("isDefault", "boolean", "pbm.version.version1", 0), ("systemCreatedProfileType", "string", "pbm.version.version2", F_OPTIONAL), ("lineOfService", "string", "pbm.version.version11", F_OPTIONAL)])
CreateEnumType("pbm.profile.CapabilityBasedProfile.ProfileCategoryEnum", "PbmProfileCategoryEnum", "pbm.version.version1", ["REQUIREMENT", "RESOURCE", "DATA_SERVICE_POLICY"])
CreateEnumType("pbm.profile.CapabilityBasedProfile.SystemCreatedProfileType", "PbmSystemCreatedProfileType", "pbm.version.version2", ["VsanDefaultProfile", "VVolDefaultProfile", "PmemDefaultProfile", "VmcManagementProfile"])
CreateDataType("pbm.profile.DefaultCapabilityBasedProfile", "PbmDefaultCapabilityProfile", "pbm.profile.CapabilityBasedProfile", "pbm.version.version1", [("vvolType", "string[]", "pbm.version.version1", 0), ("containerId", "string", "pbm.version.version1", 0)])
CreateDataType("pbm.profile.DefaultProfileAssociateOp", "PbmProfileDefaultProfileAssociateOp", "pbm.profile.AssociateOp", "pbm.version.version2", None)
CreateManagedType("pbm.profile.provider.ProfileProvider", "PbmProfileProvider", "pbm.provider.Provider", "pbm.version.version1", None, [("fetchProfile", "PbmFetchProfile", "pbm.version.version1", (("resourceType", "pbm.profile.ResourceType", "pbm.version.version1", 0, None),("profileCategory", "string", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", ]), ("fetchDefaultProfile", "PbmFetchDefaultProfile", "pbm.version.version1", (("entity", "pbm.ServerObjectRef", "pbm.version.version1", 0, None),("vvolType", "string[]", "pbm.version.version1", 0, None),), (F_OPTIONAL, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("fetchContent", "PbmFetchContent", "pbm.version.version1", (("profileIds", "pbm.profile.ProfileId[]", "pbm.version.version1", 0, None),), (0, "pbm.profile.Profile[]", "pbm.profile.Profile[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", ]), ("fetchContentAsString", "PbmFetchContentAsString", "pbm.version.version1", (("profileId", "pbm.profile.ProfileId", "pbm.version.version1", 0, None),("hub", "pbm.placement.PlacementHub", "pbm.version.version1", 0, None),("replSpec", "vim.vm.replication.ReplicationSpec", "pbm.version.version11", F_OPTIONAL, None),), (0, "string", "string"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("fetchContentForHub", "PbmFetchContentForHub", "pbm.version.version11", (("profileId", "pbm.profile.ProfileId", "pbm.version.version11", 0, None),("hub", "pbm.placement.PlacementHub", "pbm.version.version11", 0, None),), (F_OPTIONAL, "pbm.profile.Profile", "pbm.profile.Profile"), "StorageProfile.View", ["pbm.fault.PBMFault", ]), ("fetchContentAsStringBySpec", "PbmFetchContentAsStringBySpec", "pbm.version.version2", (("profileSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version2", 0, None),("hub", "pbm.placement.PlacementHub", "pbm.version.version2", 0, None),), (0, "string", "string"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("queryAtomFeedQsProviderIds", "PbmQueryProfileQsProviderIds", "pbm.version.version1", (), (F_OPTIONAL, "string[]", "string[]"), "StorageProfile.View", None), ("validateDefaultPolicyForHubs", "PbmValidateDefaultPolicyForHubs", "pbm.version.version2", (("profile", "pbm.profile.CapabilityBasedProfile", "pbm.version.version2", 0, None),("hubs", "pbm.placement.PlacementHub[]", "pbm.version.version2", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("querySpaceStatsForStorageContainer", "PbmQuerySpaceStatsForContainer", "pbm.version.version2", (("datastore", "pbm.ServerObjectRef", "pbm.version.version2", 0, None),("capabilityProfileId", "pbm.profile.ProfileId[]", "pbm.version.version2", F_OPTIONAL, None),), (F_OPTIONAL, "pbm.profile.provider.DatastoreSpaceStatistics[]", "pbm.profile.provider.DatastoreSpaceStatistics[]"), "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault", ]), ("searchApplicableDefaultProfile", "PbmSearchApplicableDefaultProfile", "pbm.version.version2", (("profiles", "pbm.profile.Profile[]", "pbm.version.version2", 0, None),("hubInfo", "pbm.placement.PlacementHubInfo[]", "pbm.version.version2", 0, None),), (F_OPTIONAL, "pbm.profile.Profile[]", "pbm.profile.Profile[]"), "StorageProfile.View", ["pbm.fault.LegacyHubsNotSupported", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault", "vmodl.fault.InvalidArgument", ])])
CreateDataType("pbm.profile.provider.ProfileProviderInfo", "PbmProfileProviderInfo", "pbm.provider.ProviderInfo", "pbm.version.version1", [("profileType", "pbm.profile.ProfileType[]", "pbm.version.version1", 0), ("provider", "pbm.profile.provider.ProfileProvider", "pbm.version.version1", 0)])
CreateDataType("pbm.fault.CapabilityProfilePropertyMismatchFault", "PbmCapabilityProfilePropertyMismatchFault", "pbm.fault.PropertyMismatchFault", "pbm.version.version1", [("resourcePropertyInstance", "pbm.capability.PropertyInstance", "pbm.version.version1", 0)])
CreateDataType("pbm.fault.IncompatibleVendorSpecificRuleSet", "PbmIncompatibleVendorSpecificRuleSet", "pbm.fault.CapabilityProfilePropertyMismatchFault", "pbm.version.version1", None)
CreateManagedType("pbm.placement.HubFinderRegistry", "PbmPlacementHubFinderRegistry", "vmodl.ManagedObject", "pbm.version.version1", None, [("registerPlacementHubFinder", "PbmRegisterPlacementHubFinder", "pbm.version.version1", (("finderInfo", "pbm.placement.PlacementHubFinder.Info", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.PBMFault", ]), ("unregisterPlacementHubFinder", "PbmUnregisterPlacementHubFinder", "pbm.version.version1", (("uniqueId", "string", "pbm.version.version1", 0, None),), (0, "void", "void"), "StorageProfile.Update", ["pbm.fault.NotFound", "pbm.fault.PBMFault", ])])
